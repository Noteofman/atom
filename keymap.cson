# Your keymap
#
# Atom keymaps work similarly to style sheets. Just as style sheets use
# selectors to apply styles to elements, Atom keymaps use selectors to associate
# keystrokes with events in specific contexts. Unlike style sheets however,
# each selector can only be declared once.
#
# You can create a new keybinding in this file by typing "key" and then hitting
# tab.
#
# Here's an example taken from Atom's built-in keymap:
#
# 'atom-text-editor':
#   'enter': 'editor:newline'
#
# 'atom-workspace':
#   'ctrl-shift-p': 'core:move-up'
#   'ctrl-p': 'core:move-down'
#
# You can find more information about keymaps in these guides:
# * http://flight-manual.atom.io/using-atom/sections/basic-customization/#_customizing_keybindings
# * http://flight-manual.atom.io/behind-atom/sections/keymaps-in-depth/
#
# If you're having trouble with your keybindings not working, try the
# Keybinding Resolver: `Cmd+.` on macOS and `Ctrl+.` on other platforms. See the
# Debugging Guide for more information:
# * http://flight-manual.atom.io/hacking-atom/sections/debugging/#check-the-keybindings
#
# This file uses CoffeeScript Object Notation (CSON).
# If you are unfamiliar with CSON, you can read more about it in the
# Atom Flight Manual:
# http://flight-manual.atom.io/using-atom/sections/basic-customization/#_cson

'atom-text-editor[data-grammar="text"]:not([mini])':
    'tab': 'emmet:expand-abbreviation-with-tab'

'atom-text-editor:not([mini]).typescript-editor':
  'f2': 'typescript:rename-refactor'
  'shift-f12': 'typescript:find-references'
  'f6': 'typescript:build'
  'f12': 'typescript:go-to-declaration'
  'ctrl-d': 'typescript:go-to-declaration'

'atom-workspace':
  'f10': 'typescript:return-from-declaration'
  'shift-f10': 'typescript:show-editor-position-history'

'.platform-darwin atom-text-editor:not([mini]).typescript-editor':
  'alt-cmd-l': 'typescript:format-code'
  'cmd-r': 'typescript:toggle-file-symbols'
  'cmd-shift-r': 'typescript:toggle-project-symbols'

'.platform-win32 atom-text-editor:not([mini]).typescript-editor, .platform-linux atom-text-editor:not([mini]).typescript-editor':
  'alt-ctrl-l': 'typescript:format-code'
  'ctrl-r': 'typescript:toggle-file-symbols'
  'ctrl-shift-r': 'typescript:toggle-project-symbols'
